Resources:
  myvpc445F9E24:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: InfraStack/my-vpc
    Metadata:
      aws:cdk:path: InfraStack/my-vpc/Resource
  myvpcpublicSubnet1SubnetD0E66A9A:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      CidrBlock: 10.0.0.0/17
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: InfraStack/my-vpc/publicSubnet1
      VpcId:
        Ref: myvpc445F9E24
    Metadata:
      aws:cdk:path: InfraStack/my-vpc/publicSubnet1/Subnet
  myvpcpublicSubnet1RouteTableCA36EE3C:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: InfraStack/my-vpc/publicSubnet1
      VpcId:
        Ref: myvpc445F9E24
    Metadata:
      aws:cdk:path: InfraStack/my-vpc/publicSubnet1/RouteTable
  myvpcpublicSubnet1RouteTableAssociationEE9B91D8:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: myvpcpublicSubnet1RouteTableCA36EE3C
      SubnetId:
        Ref: myvpcpublicSubnet1SubnetD0E66A9A
    Metadata:
      aws:cdk:path: InfraStack/my-vpc/publicSubnet1/RouteTableAssociation
  myvpcpublicSubnet1DefaultRoute656E4D1C:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: myvpcIGW4A95849E
      RouteTableId:
        Ref: myvpcpublicSubnet1RouteTableCA36EE3C
    DependsOn:
      - myvpcVPCGW0343AEB8
    Metadata:
      aws:cdk:path: InfraStack/my-vpc/publicSubnet1/DefaultRoute
  myvpcpublicSubnet2Subnet7BBEA3B9:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      CidrBlock: 10.0.128.0/17
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: InfraStack/my-vpc/publicSubnet2
      VpcId:
        Ref: myvpc445F9E24
    Metadata:
      aws:cdk:path: InfraStack/my-vpc/publicSubnet2/Subnet
  myvpcpublicSubnet2RouteTable3FF20CD8:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: InfraStack/my-vpc/publicSubnet2
      VpcId:
        Ref: myvpc445F9E24
    Metadata:
      aws:cdk:path: InfraStack/my-vpc/publicSubnet2/RouteTable
  myvpcpublicSubnet2RouteTableAssociation7E87B607:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: myvpcpublicSubnet2RouteTable3FF20CD8
      SubnetId:
        Ref: myvpcpublicSubnet2Subnet7BBEA3B9
    Metadata:
      aws:cdk:path: InfraStack/my-vpc/publicSubnet2/RouteTableAssociation
  myvpcpublicSubnet2DefaultRoute2B5FBADF:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: myvpcIGW4A95849E
      RouteTableId:
        Ref: myvpcpublicSubnet2RouteTable3FF20CD8
    DependsOn:
      - myvpcVPCGW0343AEB8
    Metadata:
      aws:cdk:path: InfraStack/my-vpc/publicSubnet2/DefaultRoute
  myvpcIGW4A95849E:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: InfraStack/my-vpc
    Metadata:
      aws:cdk:path: InfraStack/my-vpc/IGW
  myvpcVPCGW0343AEB8:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId:
        Ref: myvpcIGW4A95849E
      VpcId:
        Ref: myvpc445F9E24
    Metadata:
      aws:cdk:path: InfraStack/my-vpc/VPCGW
  InfraStackB93DBA97:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: InfraStack/InfraStack
      GroupName: test-security-group-name
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: from 0.0.0.0/0:7000
          FromPort: 7000
          IpProtocol: tcp
          ToPort: 7000
        - CidrIp: 0.0.0.0/0
          Description: from 0.0.0.0/0:22
          FromPort: 22
          IpProtocol: tcp
          ToPort: 22
      VpcId:
        Ref: myvpc445F9E24
    Metadata:
      aws:cdk:path: InfraStack/InfraStack/Resource
  myec2InstanceProfile45CE1047:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - LabRole
    Metadata:
      aws:cdk:path: InfraStack/my-ec2/InstanceProfile
  myec2373A0B60:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      IamInstanceProfile:
        Ref: myec2InstanceProfile45CE1047
      ImageId:
        Ref: SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amikernel510hvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter
      InstanceType: t3.micro
      KeyName: project-aygo
      SecurityGroupIds:
        - Fn::GetAtt:
            - InfraStackB93DBA97
            - GroupId
      SubnetId:
        Ref: myvpcpublicSubnet1SubnetD0E66A9A
      Tags:
        - Key: Name
          Value: InfraStack/my-ec2
      UserData:
        Fn::Base64: |-
          sudo yum update -y
          sudo yum install -y git
          cd ~
          git clone https://github.com/AYGO-INFRAESTRUCTURE-PROJECT/API-TEMPLATE-GENERATOR.git --branch main
          sudo amazon-linux-extras install java-openjdk11 -y
          cd 'API-TEMPLATE-GENERATOR'
          ./gradlew bootRun
    Metadata:
      aws:cdk:path: InfraStack/my-ec2/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/1WOwW7CQAxEv4X7ZsumX4ByQPQUJYgrcoxRXRIv2vU2QlH+HYVEDT15/DzyTG6d+7TbDfQxw8sta7mxQ62ANwN9PA+EuR1OdzTFVU5lYcrUtIx1aoR0YquqfFI6QtPSyle2i9Ejg7KXP/MkDqIUhHQPSj08lphl26kCfnckamrCFFgf++DT/RXwDxwkKgguL2c9GobOvoEy+Cu3NJqKok9hdpcQoCOl8Kr1dii8XHjqO5ov+IUP5+zW5m7zE5mzkES5I1vN8wmVFueURgEAAA==
    Metadata:
      aws:cdk:path: InfraStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Parameters:
  SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amikernel510hvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-kernel-5.10-hvm-x86_64-gp2
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - il-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - me-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

